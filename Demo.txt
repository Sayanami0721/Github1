添加文件 git add 文件名
提交文件 git commit（-m 注释） 文件名

git status 查看工作区和暂存区的状态
nothing to commit 没有东西要提交（暂存区没有东西）
Untracked file（有文件没有被追踪）
Changes to be committed（有东西可以被提交）

提交后在本地修改文件再查看状态，文件会提示红色modified（已修改），可以add到暂存区或者restore回滚版本

git log  可以查看提交的，显示从最近到最远的日志

当历史记录过多，查看日志时有分页效果：左下角冒号（一页展示不下），
下一页：（空格）    
上一页：b
到尾页了：显示END
退出执行其他命令：q

日志展示方式：
1.git log-----》分页式
2.git log --pretty=onelint-----》一行式
3.git --onelint-----》简洁式

4.git reflog（常用）
多了信息：HEAD@（数字）
数字含义：指针 回到当前历史版本需要走多少步

reset命令：前进或者后退历史版本
resrt --hard 黄色长索引码-----》（注意这里和上面的HEAD拼写不一样）   
复制：在终端中选中就是复制了
粘贴：右键，paste

hard，mixed，soft区别
1.hard：本地库指针移动的同时，重置了暂存区和工作区---（常用 ）
2.mixed：本地库指针移动的同时，重置了暂存区，不重置工作区
3.soft：本地库指针移动的同时，暂存区和工作区都不重置

git diff 文件名（不加文件名就所有）---》工作区（后）和暂存区（前）对比（以行为单位）
git diff HEAD 文件名-----》暂存区（后）和本地库（前）对比（以行为单位
git diff HEAD 索引号 文件名-----》暂存区（后）和本地库（前）某版本对比（以行为单位

git branch -v 查看当前版本里面所有的分支，显示最新版本，分支前面有*表示在此分支上
创建分支：git branch 分支名
切换分支：git checkou 分支名
分支合并：
1.先进入主分支 
2合并其它分支：git merge 分支名
Merge conflict 出现冲突（在同一个文件同一个位置修改时会出现冲突问题）
末尾蓝色括号（主分支|MERGUING）表示处在合并状态中
查看文件：cat 文件名 （或者自己去文件夹点开也行）
解决冲突：商议解决或者自己决定，留下想要的即可
解决完冲突问题后还处于合并状态中，需要commit提交 （此处提交只需要-m，不需要文件名）

本地创建远程库别名：
1.选择一个文件夹关联git（git init)
2.git remote -v-----》查看
3.git remote add 别名 github库地址
4.git remote -v就可以看到别名了，有两个
（fetch）指的是可以从这个地址取回东西
（push）指的是可以从这个地址推送数据

push推送操作：
git push 别名 分支名 （首次需登录）
*后面【new branch】指的是在远程库创建了新的分支，后面的->指的是将本地的分支提交到远程库的分支

clone克隆操作 
找个地方或者文件夹，无需联系git
git clone 远程库项目右上角绿色按钮的地址
克隆完后可以git remote -v查看一下，注意要先cd进入项目文件夹
克隆操作可以完成三件事：
1.初始化本地库
2.将远程库内容完整克隆到本地
3.替我们创建远程库的别名